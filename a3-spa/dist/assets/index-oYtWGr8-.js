(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class m{constructor(e,t){this.parentDiv=e,this.appName=t,this.setLabel(),this.closeBtn.addEventListener("click",this.close.bind(this))}setLabel(){this.labelDiv=document.createElement("div"),this.labelDiv.id="label-div",this.parentDiv.appendChild(this.labelDiv),this.appNameDiv=document.createElement("p"),this.appNameDiv.className="appName",this.appNameDiv.appendChild(document.createTextNode(this.appName)),this.closeBtn=document.createElement("button"),this.closeBtn.id="closeBtn",this.closeBtn.textContent="x",this.appNameDiv.appendChild(this.closeBtn),this.labelDiv.appendChild(this.appNameDiv)}dragApp(e){let t=0,n=0,s=0,i=0;this.labelDiv?this.labelDiv.onmousedown=a:e.onmousedown=a;function a(o){o=o||window.event,o.preventDefault(),e.style.zIndex+=1,s=o.clientX,i=o.clientY,document.onmouseup=c,document.onmousemove=r}function r(o){o=o||window.event,o.preventDefault(),t=s-o.clientX,n=i-o.clientY,s=o.clientX,i=o.clientY,e.style.top=e.offsetTop-n+"px",e.style.left=e.offsetLeft-t+"px"}function c(){document.onmouseup=null,document.onmousemove=null}}close(){this.parentDiv.innerHTML=""}}class u extends m{constructor(e){super(e,"Memory Game"),this.rows=null,this.columns=null,this.createHTMLStructure(),this.startTime=null,this.updateInterval=null,this.cardValues=[{name:"0",image:"img/0.png"},{name:"1",image:"img/1.png"},{name:"2",image:"img/2.png"},{name:"3",image:"img/3.png"},{name:"4",image:"img/4.png"},{name:"5",image:"img/5.png"},{name:"6",image:"img/6.png"},{name:"7",image:"img/7.png"}],this.cards=[],this.firstCard=null,this.secondCard=null,this.focusCard=null,this.attemptsNumber=0,this.gameRunning=!1,this.restartBtn.addEventListener("click",this.restart.bind(this)),this.endBtn.addEventListener("click",this.endGame.bind(this)),this.twoTwoBtn.addEventListener("click",this.createtwoTwo.bind(this)),this.fourTwoBtn.addEventListener("click",this.createfourTwo.bind(this)),this.fourFourBtn.addEventListener("click",this.createFourFour.bind(this)),this.readKey(),super.dragApp(this.parentDiv)}createHTMLStructure(){this.memoryG=document.createElement("div"),this.memoryG.classList.add("memory-game"),this.parentDiv.appendChild(this.memoryG),this.buttonsDiv=document.createElement("div"),this.buttonsDiv.classList.add("buttons-div"),this.memoryG.appendChild(this.buttonsDiv),this.welcomeImg=document.createElement("img"),this.welcomeImg.src="img/memoryStart.png",this.welcomeImg.alt="Welcome",this.welcomeImg.style.objectFit="cover",this.welcomeImg.style.width="100%",this.welcomeImg.style.height="100%",this.buttonsDiv.appendChild(this.welcomeImg),this.paragraphWelcome=document.createElement("p"),this.paragraphWelcome.textContent="Please choose size:",this.paragraphWelcome.classList.add("p"),this.buttonsDiv.appendChild(this.paragraphWelcome),this.twoTwoBtn=document.createElement("button"),this.twoTwoBtn.id="twoTwoBtn",this.twoTwoBtn.textContent="2x2",this.twoTwoBtn.classList.add("buttonSize"),this.buttonsDiv.appendChild(this.twoTwoBtn),this.fourTwoBtn=document.createElement("button"),this.fourTwoBtn.id="fourTwoBtn",this.fourTwoBtn.textContent="4x2",this.fourTwoBtn.classList.add("buttonSize"),this.buttonsDiv.appendChild(this.fourTwoBtn),this.fourFourBtn=document.createElement("button"),this.fourFourBtn.id="fourFourBtn",this.fourFourBtn.textContent="4x4",this.fourFourBtn.classList.add("buttonSize"),this.buttonsDiv.appendChild(this.fourFourBtn),this.result=document.createElement("div"),this.result.id="result",this.memoryG.appendChild(this.result),this.gameContainer=document.createElement("div"),this.gameContainer.classList.add("game-container"),this.memoryG.appendChild(this.gameContainer),this.content=document.createElement("div"),this.content.classList.add("content"),this.memoryG.appendChild(this.content),this.attempts=document.createElement("div"),this.attempts.id="attempts",this.content.appendChild(this.attempts),this.time=document.createElement("div"),this.time.id="time",this.content.appendChild(this.time),this.endBtn=document.createElement("button"),this.endBtn.id="endBtn",this.endBtn.textContent="End",this.endBtn.classList.add("hide"),this.memoryG.appendChild(this.endBtn),this.restartBtn=document.createElement("button"),this.restartBtn.id="restartBtn",this.restartBtn.textContent="Restart",this.restartBtn.classList.add("hide"),this.memoryG.appendChild(this.restartBtn)}startGame(){clearInterval(this.updateInterval),this.attemptsNumber=0,this.welcomeImg.classList.add("hide"),this.startTime=new Date,this.endBtn.classList.remove("hide"),this.rightCardsN=0,this.shuffleItem(this.cardValues),this.attemptsHandlar(),this.timeHandler(),this.content.classList.remove("hide")}createtwoTwo(){this.rows=2,this.columns=2,this.startGame(),this.gameboardSize(this.cardValues,this.columns,this.rows)}createfourTwo(){this.rows=2,this.columns=4,this.startGame(),this.gameboardSize(this.cardValues,this.columns,this.rows)}createFourFour(){this.rows=4,this.columns=4,this.startGame(),this.gameboardSize(this.cardValues,this.columns,this.rows)}endGame(){this.gameContainer.innerHTML="",this.content.classList.add("hide"),this.welcomeImg.classList.remove("hide"),this.endBtn.classList.add("hide"),clearInterval(this.updateInterval)}winGame(){this.endGame(),this.buttonsDiv.classList.add("hide");const e=document.createElement("img");e.src="img/congrats.gif",this.result.innerHTML="<h2> Congratulations !</h2>",e.alt="You won!",this.result.appendChild(e),this.result.classList.remove("hide"),this.endBtn.classList.add("hide"),this.restartBtn.classList.remove("hide"),this.content.classList.remove("hide")}restart(){this.buttonsDiv.classList.remove("hide"),this.content.classList.add("hide"),this.welcomeImg.classList.remove("hide"),this.endBtn.classList.add("hide"),this.result.classList.add("hide"),this.restartBtn.classList.add("hide")}readKey(){document.addEventListener("keydown",e=>{switch(console.log(e.key),e.key){case"ArrowLeft":case"ArrowUp":case"ArrowRight":case"ArrowDown":this.focusCard&&this.changeFocusCardId(e.key);break;case 13:this.cardClick();break}})}changeFocusCardId(e){const[t,n]=this.focusCard.id.split(",").map(Number);let s=t,i=n;switch(e){case"ArrowLeft":s=Math.max(1,t-1),console.log(s);break;case"ArrowUp":i=Math.max(1,n-1),console.log(i);break;case"ArrowRight":s=Math.min(this.columns,t+1),console.log(s);break;case"ArrowDown":i=Math.min(this.rows,n+1),console.log(i);break}const a=document.getElementById(`${s},${i}`);a&&(this.focusCard=a,this.focusCard.focus())}attemptsHandlar(){this.attempts.innerHTML=` Attempts: ${this.attemptsNumber}`}timeHandler(){const e=()=>{const n=(new Date-this.startTime)/1e3,s=Math.round(n);if(s>=60){const i=Math.floor(s/60),a=s%60;this.time.innerHTML=`Time: ${i} minutes ${a} seconds`}else this.time.innerHTML=`Time: ${s} seconds`};this.updateInterval=setInterval(e,1e3)}createCardElement(e){const t=document.createElement("div");return t.classList.add("card-container"),t.dataset.cardValue=e.name,t.tabIndex=0,t.innerHTML=`
        <div class="card-before"> ? </div>
        <div class="card-after">
          <img src="${e.image}" class="card-image"/>
        </div>
      `,t}shuffleItem(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}return e}gameboardSize(e,t,n){this.gameContainer.innerHTML="";const s=t*n,i=[...e.slice(0,s/2),...e.slice(0,s/2)].sort(()=>Math.random()-.5);this.cards=i.map((a,r)=>{const c=this.createCardElement(a),o=r%t+1,d=Math.floor(r/t)+1;return c.id=`${o},${d}`,c.addEventListener("click",l=>this.cardClick(c,l)),c.addEventListener("keypress",l=>{l.key==="Enter"&&(c.focus(),this.cardClick(c))}),c}),this.gameContainer.append(...this.cards),this.gameContainer.style.gridTemplateColumns=`repeat(${t}, auto)`,this.gameContainer.style.gridTemplateRows=`repeat(${n}, auto)`}cardClick(e){if(this.focusCard=e,!e.classList.contains("sameCard")&&e!==this.firstCard)if(e.classList.add("render"),!this.firstCard)this.firstCard=e,this.firstCardValue=e.dataset.cardValue;else{this.attemptsNumber+=1,this.attemptsHandlar(),this.secondCard=e;const t=e.dataset.cardValue;this.compareCards(this.firstCardValue,t)}}compareCards(e,t){if(e===t)this.firstCard.classList.add("sameCard"),this.secondCard.classList.add("sameCard"),this.firstCard=null,this.rightCardsN+=1,console.log(this.rightCardsN),this.rightCardsN===Math.floor(this.cards.length/2)&&this.winGame();else{const[n,s]=[this.firstCard,this.secondCard];this.firstCard=null,this.secondCard=null,setTimeout(()=>{n.classList.remove("render"),s.classList.remove("render")},500)}}}class p{constructor(){this.desktopDiv=document.createElement("div"),this.desktopDiv.classList.add("title-div"),document.body.appendChild(this.desktopDiv);const e=[{value:"img/desktop.jpeg",label:"Mountain "},{value:"img/desktop2.jpeg",label:"Green Nature"},{value:"img/background2.png",label:"Colors "},{value:"img/desktop4.webp",label:"Animation "}];this.createDropdownButton("Change Background",e),this.currentTime(),setInterval(()=>this.currentTime(),6e3)}createDropdownButton(e,t){const n=document.createElement("div"),s=document.createElement("button");s.className=" settingBtn",s.innerText=e;const i=document.createElement("div");i.className="dropdown-menu",t.forEach(a=>{const r=document.createElement("a");r.className="dropdown-item",r.innerText=a.label,r.addEventListener("click",()=>{this.changeBackgroundImage(a.value)}),i.appendChild(r)}),n.appendChild(s),n.appendChild(i),s.addEventListener("click",function(){i.classList.toggle("show")}),document.addEventListener("click",function(a){n.contains(a.target)||i.classList.remove("show")}),this.desktopDiv.appendChild(n)}changeBackgroundImage(e){document.body.style.backgroundImage=`url('${e}')`}currentTime(){const e=new Date,t=["Sön","Mån","Tis","Ons","Tors","Fre","Lör"],n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],s=e.getDay(),i=e.getMonth(),a=e.getDate(),r=e.getHours().toString().padStart(2,"0"),c=e.getMinutes().toString().padStart(2,"0"),o=`${t[s]} ${a} ${n[i]}  ${r}:${c}`,d=document.querySelector(".clockDiv");if(d)d.innerText=o;else{const l=document.createElement("div");l.className="clockDiv",this.desktopDiv.appendChild(l),l.innerText=o}}}class g{constructor(e){this.parentDiv=e}setUserName(e){sessionStorage.setItem("username",e)}getUserName(){return sessionStorage.getItem("username")}enterUserName(){return new Promise((e,t)=>{this.usernameInputDiv=document.createElement("div"),this.usernameInputDiv.className="inputDiv",this.parentDiv.appendChild(this.usernameInputDiv),this.usernameInput=document.createElement("input"),this.usernameInput.type="text",this.usernameInput.id="username-input",this.usernameInput.placeholder="Enter your username",this.usernameInputDiv.appendChild(this.usernameInput);const n=document.createElement("button");n.classList.add("changeNameBtn"),n.innerText="Change user name",this.usernameInputDiv.appendChild(n);const s=document.createElement("button");s.classList.add("changeNameBtn");const i=this.getUserName();i&&(s.innerText=`Use current username: ${i}`,this.usernameInputDiv.appendChild(s)),n.addEventListener("click",()=>{const a=this.usernameInput.value;a.trim()!==""&&(this.setUserName(a),this.usernameInput.value="",this.parentDiv.removeChild(this.usernameInputDiv),e())}),this.usernameInput.addEventListener("keydown",a=>{a.key==="Enter"&&n.click()}),s.addEventListener("click",()=>{const a=this.getUserName();a?(this.parentDiv.removeChild(this.usernameInputDiv),e(a)):t(new Error("Username not available"))})})}}class v extends m{constructor(e,t){super(e,"Chat"),super.dragApp(this.parentDiv),this.websocket=new WebSocket("wss://courselab.lnu.se/message-app/socket"),this.channel="Channel1",this.messagesNumber=0,this.chatDiv=document.createElement("div"),this.chatDiv.classList.add("chat-container"),this.parentDiv.appendChild(this.chatDiv),this.user=new g(this.chatDiv),this.messageHistory={},this.startChat()}async startChat(){await this.user.enterUserName(),this.userName=this.user.getUserName(),this.createHTMLStructure(),this.websocketHandlar()}createHTMLStructure(){this.channelSelectDiv=document.createElement("div"),this.channelSelectDiv.className="changeSelectedDiv";const e=document.createElement("label");e.innerText="Current Channel: ",this.channelSelect=document.createElement("select"),this.channelSelect.className="selectChannel",["Channel1","Marah","LNU","Class","Encrypted channel"].forEach(i=>{const a=document.createElement("option");a.value=i,a.text=i,this.channelSelect.appendChild(a)}),this.channelSelectDiv.appendChild(e),this.channelSelectDiv.appendChild(this.channelSelect),this.chatDiv.appendChild(this.channelSelectDiv),this.channelSelect.addEventListener("change",()=>{const i=this.channelSelect.value;i!==this.channel&&this.changeChannel(i)}),this.chats=document.createElement("div"),this.chats.className="chat-container2",this.chatDiv.appendChild(this.chats);const n=document.createElement("div");n.className="messageInputDiv",this.chatDiv.appendChild(n),this.allEmojisDiv=document.createElement("div"),this.allEmojisDiv.className="allEmojisDiv";const s=["&#128512;","&#128516;","&#128525;","&#128151;","&#128511;","&#128512;","&#128513;","&#128514;","&#128515;","&#128516;","&#128517;"];n.appendChild(this.allEmojisDiv),this.inputMessage=document.createElement("textarea"),this.inputMessage.className="message-input",this.inputMessage.placeholder="Enter your message",n.appendChild(this.inputMessage),this.sendBtn=document.createElement("button"),this.sendBtn.classList.add("sendButton"),this.sendBtn.innerText="Send",n.appendChild(this.sendBtn),this.sendBtn.addEventListener("click",()=>{this.inputMessage.value.length>0&&this.sendMessage(this.inputMessage.value),this.inputMessage.value=""}),this.inputMessage.addEventListener("keydown",i=>{i.key==="Enter"&&this.sendBtn.click()}),s.forEach(i=>{const a=document.createElement("button");a.innerHTML=i,a.addEventListener("click",()=>{this.insertEmojiToMess(a.innerHTML)}),this.allEmojisDiv.appendChild(a)})}insertEmojiToMess(e){this.inputMessage.value+=e}changeUsername(e){this.userName=e}changeChannel(e){this.channel=e,console.log(`Channel changed to: ${e}`),this.chats.innerHTML="",this.displayCachedMessages(this.channel)}websocketHandlar(){this.websocket.onopen=()=>{console.log("Server is open"),this.serverMessageHandlar("Server is open")},this.websocket.onerror=e=>{console.error("WebSocket error:",e.message)},this.websocket.onclose=()=>{console.log("The websocket is closed."),console.log(this.websocket),this.serverMessageHandlar("The websocket is closed.")},this.websocket.onmessage=e=>{const t=JSON.parse(e.data);if(t.type==="heartbeat"){console.log(` Ignoring.
 The web socket server sent a "heartbeat" message to keep the connection open.`);return}t.channel===this.channel&&this.messageHandlar(t)}}sendMessage(e){console.log(`Message before cryption is ${e}`),this.channel==="Encrypted channel"&&(e=this.encryptionHandlar(e,!0),console.log(`Message after cryption is ${e}`)),!this.websocket||this.websocket.readyState===3?console.log("The websocket is not connected to the server."):(console.log("WebSocket connection state:",this.websocket.readyState),this.websocket.send(JSON.stringify({type:"message",data:e,username:this.userName,channel:this.channel,key:"eDBE76deU7L0H9mEBgxUKVR0VCnq0XBd"})))}serverMessageHandlar(e){const n=new Date().toLocaleTimeString();this.chats.innerHTML+=` ${e} ${n} <br>`,this.chats.scrollTop=this.chats.scrollHeight}createMessageElement(e){const n=new Date().toLocaleTimeString();if(e.data==="")return console.log("EMPTY Message"),null;const s=document.createElement("p");return e.channel==="Encrypted channel"?s.innerHTML=` <div class="messagestamp"> <strong> ${e.username}
            </strong>: <br> ${this.encryptionHandlar(e.data,!1)} <span class="timestamp">${n}</span> </div>`:s.innerHTML=` <div class="messagestamp"> <strong> ${e.username} 
        </strong>: <br> ${e.data}  <span class="timestamp"> ${n}</span> </div>`,this.messagesNumber+=1,this.saveToMessageHistory(this.channel,s),s}saveToMessageHistory(e,t){if(this.messageHistory[e]||(this.messageHistory[e]=[]),this.messageHistory[e].push(t),this.messageHistory[e].length>25){const n=this.messageHistory[e].shift();this.chats.removeChild(n),this.messagesNumber-=1}}messageHandlar(e){const t=this.createMessageElement(e);this.chats.appendChild(t),this.displayCachedMessages(this.channel)}displayCachedMessages(e){(this.messageHistory[e]||[]).forEach(n=>{console.log(n),this.chats.appendChild(n)}),this.chats.scrollTop=this.chats.scrollHeight}encryptionHandlar(e,t){const n=[],s="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ÅÄÖåäö";if(t)for(const i of e){const a=s[(s.indexOf(i)+5)%s.length];n.push(a)}else for(const i of e){const a=s[(s.indexOf(i)-5)%s.length];n.push(a)}return n.join("")}}class C extends m{constructor(e){super(e,"QUIZ"),this.createHTMLStructure(),super.dragApp(this.parentDiv),this.unorderedQuestions=[],this.currentQuestionIndex=0,this.score=0}createHTMLStructure(){this.quizContainer=document.createElement("div"),this.quizContainer.classList.add("quiz-div"),this.parentDiv.appendChild(this.quizContainer),this.buttonsDiv=document.createElement("div"),this.buttonsDiv.className="buttonsDiv",this.quizContainer.appendChild(this.buttonsDiv),this.startButton=document.createElement("button"),this.startButton.textContent="START",this.buttonsDiv.appendChild(this.startButton),this.startButton.className="quizButton",this.startButton.addEventListener("click",()=>this.startQuiz()),this.procentImg=document.createElement("img"),this.procentImg.src="img/QUIZbackground.jpeg",this.procentImg.alt="quiz",this.procentImg.style.objectFit="cover",this.procentImg.style.width="100%",this.procentImg.style.height="300px",this.quizContainer.appendChild(this.procentImg),this.questionContainerElement=document.createElement("div"),this.quizContainer.appendChild(this.questionContainerElement),this.questionElement=document.createElement("div"),this.quizContainer.appendChild(this.questionElement),this.answerButtonsElement=document.createElement("div"),this.answerButtonsElement.className="choices",this.quizContainer.appendChild(this.answerButtonsElement),this.congratsMessage=document.createElement("div"),this.congratsMessage.className="win hide",this.quizContainer.appendChild(this.congratsMessage)}startQuiz(){console.log("STARTED"),this.procentImg.classList.add("hide"),this.startButton.classList.add("hide"),this.questionContainerElement.classList.remove("hide"),this.unorderedQuestions=this.questions.sort(()=>Math.random()-.5),this.currentQuestionIndex=0,this.next()}endQuiz(){console.log("Ended"),this.startButton.classList.remove("hide")}next(){this.resetState(),this.showQuestion(this.unorderedQuestions[this.currentQuestionIndex])}createButton(e){const t=document.createElement("button");return t.classList="choiceBtn",t.id=e,t}showQuestion(e){if(this.questionElement.innerText=e.question,e.choices.forEach(t=>{const n=this.createButton("choiceButton");n.textContent=t.alt,n.addEventListener("click",()=>this.selectAnswer(t.correct,n)),this.answerButtonsElement.appendChild(n)}),e.img){const t=document.createElement("img");t.src=e.img,t.className="imgChoice",this.answerButtonsElement.appendChild(t)}}resetState(){for(this.clearStatusClass(this.parentDiv);this.answerButtonsElement.firstChild;)this.answerButtonsElement.removeChild(this.answerButtonsElement.firstChild)}selectAnswer(e,t){this.setStatusClass(t,e),e&&(this.score+=1,console.log(this.score)),this.unorderedQuestions.length>this.currentQuestionIndex+1?(this.currentQuestionIndex++,setTimeout(()=>{this.next()},1e3)):this.showScore()}setStatusClass(e,t){this.clearStatusClass(e),t?e.classList.add("correct"):e.classList.add("wrong")}clearStatusClass(e){e.classList.remove("correct"),e.classList.remove("wrong")}showScore(){this.resetState(),this.questionElement.innerText=`Your score: ${this.score} out of ${this.questions.length}`,this.procentuellScore()}procentuellScore(){const e=this.score/this.questions.length*100,t=document.createElement("div");t.innerHTML=`<span>${Math.round(e)} </span>`,t.className="inside",this.procentImg=document.createElement("img"),this.procentImg.src="img/procent.jpeg",this.procentImg.alt="quiz",this.procentImg.style.objectFit="cover",this.procentImg.style.width="100%",this.procentImg.style.height="200px",this.procentImg.style.position="relative",this.quizContainer.appendChild(t),this.quizContainer.appendChild(this.procentImg)}questions=[{question:"What is the capital city of Sweden?",choices:[{alt:"Stockholm",correct:!0},{alt:"Paris",correct:!1},{alt:"Berlin",correct:!1}]},{question:"In JavaScript, which keyword is used to declare a variable?",choices:[{alt:"var",correct:!0},{alt:"let",correct:!1},{alt:"cont",correct:!1},{alt:"function",correct:!1}]},{question:" Which app has the most total users?",choices:[{alt:"Snapchat",correct:!1},{alt:"Instagram",correct:!0},{alt:"TikTok",correct:!1},{alt:"Whatsapp",correct:!1}]},{question:"What is Molecule? ",choices:[{alt:"Oxygen",correct:!1},{alt:"Water",correct:!0},{alt:"Hydrogen",correct:!1},{alt:"Ethanol",correct:!1}],img:"img/h2o.png"},{question:"which country's flag is it",choices:[{alt:"USA",correct:!1},{alt:"Sweden",correct:!1},{alt:"Canada",correct:!0}],img:"img/kanada.png"}]}document.addEventListener("DOMContentLoaded",()=>{new p;const h=document.getElementById("openMemoryGame"),e=document.getElementById("openChat"),t=document.getElementById("openQuiz");let n=2,s=2;h.addEventListener("click",()=>{const a=i();new u(a)}),e.addEventListener("click",()=>{const a=i();new v(a)}),t.addEventListener("click",()=>{const a=i();new C(a)});function i(){const a=document.createElement("div");return a.classList.add("app-container"),a.classList.remove("hide"),n+=3,s+=3,n>40&&(s=2,n=2),a.style.left=`${n}%`,a.style.top=`${s}%`,document.body.appendChild(a),console.log("OPENED!!"),a}});
